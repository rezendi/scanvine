version: '3.5'

services:
services:
  web:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./server/nginx.conf.https:/etc/nginx/nginx.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - django

  django:
    build: .
    image: &scanvine scanvine
    restart: unless-stopped
    env_file: .env
    command: ["python", "manage.py", "runserver", "0.0.0.0:8080"]
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    depends_on:
      - rabbitmq

  worker:
    build: .
    image: *scanvine
    restart: unless-stopped
    env_file: .env
    command: ["celery", "worker", "--app=scanvine", "--concurrency=1", "--hostname=worker@%h", "--loglevel=INFO", "--beat"]
    volumes:
      - .:/app
    depends_on:
      - rabbitmq

  flower:
    image: mher/flower
    restart: unless-stopped
    command: ["flower", "--broker=amqp://guest:guest@rabbitmq:5672"]
    ports:
      - "5555:5555"
    depends_on:
      - rabbitmq

  rabbitmq:
    image: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  